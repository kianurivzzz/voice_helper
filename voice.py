import logging
import threading
from pathlib import Path

import pyttsx3

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
logs_dir = Path('logs')
logs_dir.mkdir(exist_ok=True)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(logs_dir / 'voice_helper.log'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger('voice')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–≤–∏–∂–∫–∞ —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏
try:
    engn = pyttsx3.init()
    engn.setProperty('rate', 180)  # speech rate

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤
    voices = engn.getProperty('voices')

    # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –º—É–∂—Å–∫–æ–π —Ä—É—Å—Å–∫–∏–π –≥–æ–ª–æ—Å
    male_ru_voice_found = False
    for voice in voices:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≥–æ–ª–æ—Å —Ä—É—Å—Å–∫–∏–π –∏ –º—É–∂—Å–∫–æ–π
        is_russian = 'russian' in voice.name.lower() or 'ru' in voice.id.lower()
        is_male = voice.gender == 'male' if hasattr(voice, 'gender') else ('male' in voice.name.lower())

        if is_russian and is_male:
            engn.setProperty('voice', voice.id)
            logger.info(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –º—É–∂—Å–∫–æ–π —Ä—É—Å—Å–∫–∏–π –≥–æ–ª–æ—Å: {voice.name}")
            male_ru_voice_found = True
            break

    # –ï—Å–ª–∏ –º—É–∂—Å–∫–æ–π —Ä—É—Å—Å–∫–∏–π –≥–æ–ª–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—â–µ–º –ª—é–±–æ–π —Ä—É—Å—Å–∫–∏–π
    if not male_ru_voice_found:
        for voice in voices:
            if 'russian' in voice.name.lower() or 'ru' in voice.id.lower():
                engn.setProperty('voice', voice.id)
                logger.info(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ä—É—Å—Å–∫–∏–π –≥–æ–ª–æ—Å: {voice.name}")
                break

    # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    logger.info("–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥–æ–ª–æ—Å–∞:")
    for i, voice in enumerate(voices):
        gender = voice.gender if hasattr(voice, 'gender') else '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
        logger.info(f"–ì–æ–ª–æ—Å {i}: {voice.name}, ID: {voice.id}, –ü–æ–ª: {gender}")

    logger.info("–î–≤–∏–∂–æ–∫ —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
except Exception as e:
    logger.error(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–≤–∏–∂–∫–∞ —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏: {e}")

# –§–ª–∞–≥ –¥–ª—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è
speaking_flag = threading.Event()
speaking_flag.clear()

#voice acting
def speaker(text):
    """–û–∑–≤—É—á–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è"""
    try:
        # –ï—Å–ª–∏ —É–∂–µ –∏–¥–µ—Ç –æ–∑–≤—É—á–∏–≤–∞–Ω–∏–µ, –ø—Ä–µ—Ä—ã–≤–∞–µ–º –µ–≥–æ
        if speaking_flag.is_set():
            engn.stop()
            speaking_flag.clear()
            logger.info("–ü—Ä–µ–¥—ã–¥—É—â–µ–µ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ")

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è
        speaking_flag.set()

        # –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –≤ –∫–æ–Ω—Å–æ–ª—å
        print(f"–ê–ª–µ–∫—Å: {text}")

        # –û–∑–≤—É—á–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç
        engn.say(text)
        engn.runAndWait()

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è
        speaking_flag.clear()

        logger.info(f"–û–∑–≤—É—á–µ–Ω–æ: {text[:50]}...")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è: {e}")
        speaking_flag.clear()


#greeting
def speak(what):
    """–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è —Å –≤—ã–≤–æ–¥–æ–º –≤ –∫–æ–Ω—Å–æ–ª—å"""
    try:
        print(f"–ê–ª–µ–∫—Å: {what}")

        # –ï—Å–ª–∏ —É–∂–µ –∏–¥–µ—Ç –æ–∑–≤—É—á–∏–≤–∞–Ω–∏–µ, –ø—Ä–µ—Ä—ã–≤–∞–µ–º –µ–≥–æ
        if speaking_flag.is_set():
            engn.stop()
            speaking_flag.clear()

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è
        speaking_flag.set()

        engn.say(what)
        engn.runAndWait()
        engn.stop()

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è
        speaking_flag.clear()

        logger.info(f"–û–∑–≤—É—á–µ–Ω–æ —á–µ—Ä–µ–∑ speak: {what[:50]}...")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ speak: {e}")
        speaking_flag.clear()


def indicate_listening(status=True):
    """–ò–Ω–¥–∏–∫–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ª—É—à–∞–Ω–∏—è"""
    if status:
        print("üé§ –°–ª—É—à–∞—é...")
    else:
        print("üîá –û–∂–∏–¥–∞–Ω–∏–µ...")
